plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.vaadin' version '24.7.6'
    id 'jacoco'
}

group = 'com.SAE'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Vaadin (version fixée manuellement)
    implementation 'com.vaadin:vaadin-spring-boot-starter:24.7.6'
    // Spring Boot : web, JPA, actuator
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Base de données : Flyway + PostgreSQL
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    runtimeOnly 'org.postgresql:postgresql'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
jacoco {
    toolVersion = "0.8.10" // ou la version que tu veux
}

jacocoTestReport {
    dependsOn test // exécute les tests avant de créer le rapport

    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}
